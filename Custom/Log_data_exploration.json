{"paragraphs":[{"text":"%md\n# Data Cleaning with Glue\n## Load the data","user":"admin","dateUpdated":"2018-06-15T23:01:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529101186015_-389340055","id":"20180615-221946_124777537","dateCreated":"2018-06-15T22:19:46+0000","dateStarted":"2018-06-15T23:01:20+0000","dateFinished":"2018-06-15T23:01:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2832","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Data Cleaning with Glue</h1>\n<h2>Load the data</h2>\n</div>"}]}},{"text":"# Creating the Glue context\nimport sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom pyspark.sql import SparkSession # Run SQL statements\n\nglueContext = GlueContext(SparkContext.getOrCreate())\n","user":"admin","dateUpdated":"2018-06-15T22:34:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529101272536_713304320","id":"20180615-222112_1863458074","dateCreated":"2018-06-15T22:21:12+0000","dateStarted":"2018-06-15T22:34:05+0000","dateFinished":"2018-06-15T22:34:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2833","results":{"code":"SUCCESS","msg":[]}},{"text":"# Load the GoPro Log Data\n\"\"\"\nNote: This should already be crawled so an appropriate GLue catalog is created\n\"\"\"\nlog_dyf = glueContext.create_dynamic_frame.from_catalog(\n    database = \"gopro\",\n    table_name = \"ecs_var_lib_docker_containers_64a2bb184180d6c22efbc6d25d685bc2bb12968553a69f058d0e3fecad5d902b_qa_entitlements_manager_entitl...\")\nlog_dyf.printSchema()","user":"admin","dateUpdated":"2018-06-15T23:06:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529101353684_1434848070","id":"20180615-222233_1303534071","dateCreated":"2018-06-15T22:22:33+0000","dateStarted":"2018-06-15T23:06:09+0000","dateFinished":"2018-06-15T23:06:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2834","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n|-- container: string\n|-- qa-entitlements-manager: choice\n|    |-- string\n|    |-- struct\n|    |    |-- method: string\n|    |    |-- path: string\n|    |    |-- format: string\n|    |    |-- controller: string\n|    |    |-- action: string\n|    |    |-- status: int\n|    |    |-- duration: double\n|    |    |-- view: double\n|    |    |-- db: double\n|    |    |-- gpuid: null\n|    |    |-- scopes: null\n|    |    |-- user_agent: null\n|    |    |-- remote_ip: null\n|    |    |-- params: struct\n|    |    |-- timestamp: string\n|    |    |-- hostname: string\n|-- tag: string\n|-- partition_0: string\n|-- partition_1: string\n|-- partition_2: string\n\n"}]}},{"text":"%md\nDynamicFrames introduce the notion of a `choice` type. In this case, it shows that both `string` and `struct` may appear in that column. The Spark DataFrame considered the whole dataset, but was forced to assign the most general type to the column (string). In fact, Spark often resorts to the most general case when there are complex types or variations with which it is unfamiliar. To query the `qa-entitlements-manager`, we need to firstly \"resolve\" the choice, thus we sill use the `cast` method to transform the \"choice\" to `struct`.\n\n## Using the `cast` option","user":"admin","dateUpdated":"2018-06-15T23:01:13+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529101556812_2022804042","id":"20180615-222556_153054293","dateCreated":"2018-06-15T22:25:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2835","dateFinished":"2018-06-15T23:01:13+0000","dateStarted":"2018-06-15T23:01:13+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>DynamicFrames introduce the notion of a <code>choice</code> type. In this case, it shows that both <code>string</code> and <code>struct</code> may appear in that column. The Spark DataFrame considered the whole dataset, but was forced to assign the most general type to the column (string). In fact, Spark often resorts to the most general case when there are complex types or variations with which it is unfamiliar. To query the <code>qa-entitlements-manager</code>, we need to firstly &ldquo;resolve&rdquo; the choice, thus we sill use the <code>cast</code> method to transform the &ldquo;choice&rdquo; to <code>struct</code>.</p>\n<h2>Using the <code>cast</code> option</h2>\n</div>"}]}},{"text":"log_cast = log_dyf.resolveChoice(specs = [('qa-entitlements-manager','cast:struct')])\nlog_cast.printSchema()","user":"admin","dateUpdated":"2018-06-15T23:06:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529102046182_1970763893","id":"20180615-223406_1963658634","dateCreated":"2018-06-15T22:34:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3091","dateFinished":"2018-06-15T23:06:20+0000","dateStarted":"2018-06-15T23:06:20+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n|-- container: string\n|-- qa-entitlements-manager: struct\n|    |-- method: string\n|    |-- path: string\n|    |-- format: string\n|    |-- controller: string\n|    |-- action: string\n|    |-- status: int\n|    |-- duration: double\n|    |-- view: double\n|    |-- db: double\n|    |-- gpuid: null\n|    |-- scopes: null\n|    |-- user_agent: null\n|    |-- remote_ip: null\n|    |-- params: struct\n|    |-- timestamp: string\n|    |-- hostname: string\n|-- tag: string\n|-- partition_0: string\n|-- partition_1: string\n|-- partition_2: string\n\n"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529102381245_608643873","id":"20180615-223941_446397954","dateCreated":"2018-06-15T22:39:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3346","text":"","dateUpdated":"2018-06-15T22:50:30+0000","dateFinished":"2018-06-15T22:50:50+0000","dateStarted":"2018-06-15T22:50:30+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<awsglue.dynamicframe.DynamicFrame object at 0x7f0d0d1fcad0>\n"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529103030243_-1296742715","id":"20180615-225030_1343977100","dateCreated":"2018-06-15T22:50:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3531","text":"%md\n## Using the `make_cols` option","dateUpdated":"2018-06-15T23:02:28+0000","dateFinished":"2018-06-15T23:02:28+0000","dateStarted":"2018-06-15T23:02:28+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Using the <code>make_cols</code> option</h2>\n</div>"}]}},{"text":"log_struct = log_dyf.resolveChoice(specs = [('qa-entitlments-manager','make_struct')])\nlog_struct.printSchema()","user":"admin","dateUpdated":"2018-06-15T23:11:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529103464093_63021195","id":"20180615-225744_523745492","dateCreated":"2018-06-15T22:57:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3623","dateFinished":"2018-06-15T23:11:37+0000","dateStarted":"2018-06-15T23:11:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n|-- container: string\n|-- qa-entitlements-manager: choice\n|    |-- string\n|    |-- struct\n|    |    |-- method: string\n|    |    |-- path: string\n|    |    |-- format: string\n|    |    |-- controller: string\n|    |    |-- action: string\n|    |    |-- status: int\n|    |    |-- duration: double\n|    |    |-- view: double\n|    |    |-- db: double\n|    |    |-- gpuid: null\n|    |    |-- scopes: null\n|    |    |-- user_agent: null\n|    |    |-- remote_ip: null\n|    |    |-- params: struct\n|    |    |-- timestamp: string\n|    |    |-- hostname: string\n|-- tag: string\n|-- partition_0: string\n|-- partition_1: string\n|-- partition_2: string\n\n"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529104506691_-556726084","id":"20180615-231506_547134897","dateCreated":"2018-06-15T23:15:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4129","text":"%md\n## Run SQL Queries","dateUpdated":"2018-06-15T23:15:29+0000","dateFinished":"2018-06-15T23:15:29+0000","dateStarted":"2018-06-15T23:15:29+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Run SQL Queries</h2>\n</div>"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529103905398_-679151211","id":"20180615-230505_1477938032","dateCreated":"2018-06-15T23:05:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3760","text":"# Convert from DynamicFrame to Spark DataFrame\nlog_df = log_cast.toDF()\nlog_df.head()","dateUpdated":"2018-06-15T23:19:17+0000","dateFinished":"2018-06-15T23:19:21+0000","dateStarted":"2018-06-15T23:19:17+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(container=u'64a2bb184180d6c22efbc6d25d685bc2bb12968553a69f058d0e3fecad5d902b', qa-entitlements-manager=Row(method=u'GET', path=u'/system/health', format=u'html', controller=u'SystemController', action=u'health', status=200, duration=0.34, view=0.0, db=0.0, gpuid=None, scopes=None, user_agent=None, remote_ip=None, params=Row(), timestamp=u'2018-06-15T16:18:11+00:00', hostname=u'https://gopro-qa.com'), tag=u'ecs.var.lib.docker.containers.64a2bb184180d6c22efbc6d25d685bc2bb12968553a69f058d0e3fecad5d902b.qa-entitlements-manager@entitlements-manager@92f9b2d049f0b5121dfa821b580c845926f876db.nlog', partition_0=u'2018', partition_1=u'06', partition_2=u'15')\n"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529104355798_-766077103","id":"20180615-231235_679887115","dateCreated":"2018-06-15T23:12:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4017","text":"# Create a Twmporary View\nlog_df.createOrReplaceTempView(\"logTable\")\nlog_sql = spark.sql(\"SELECT * FROM logTable\")","dateUpdated":"2018-06-15T23:19:23+0000","dateFinished":"2018-06-15T23:19:24+0000","dateStarted":"2018-06-15T23:19:24+0000","results":{"code":"SUCCESS","msg":[]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529104643945_-1183315121","id":"20180615-231723_223317270","dateCreated":"2018-06-15T23:17:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4198","text":"log_sql","dateUpdated":"2018-06-15T23:19:56+0000","dateFinished":"2018-06-15T23:19:56+0000","dateStarted":"2018-06-15T23:19:56+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[container: string, qa-entitlements-manager: struct<method:string,path:string,format:string,controller:string,action:string,status:int,duration:double,view:double,db:double,gpuid:null,scopes:null,user_agent:null,remote_ip:null,params:struct<>,timestamp:string,hostname:string>, tag: string, partition_0: string, partition_1: string, partition_2: string]\n"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529104702195_-1738615053","id":"20180615-231822_1748707057","dateCreated":"2018-06-15T23:18:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4272","text":"%md\n## Convert to Parquet","dateUpdated":"2018-06-15T23:21:16+0000","dateFinished":"2018-06-15T23:21:16+0000","dateStarted":"2018-06-15T23:21:16+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Convert to Parquet</h2>\n</div>"}]}},{"text":"# Convert the Dynamic DF to Parquet\nglueContext.write_dynamic_frame.from_options(\n       frame = log_cast,\n       connection_type = \"s3\",\n       connection_options = {\"path\": \"s3://athena-hol-722812380636-us-west-2/log_output/cast_parquet\"},\n       format = \"parquet\")\n","user":"admin","dateUpdated":"2018-06-15T23:22:34+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529104875770_-1733197396","id":"20180615-232115_1453430431","dateCreated":"2018-06-15T23:21:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4435","dateFinished":"2018-06-15T23:22:54+0000","dateStarted":"2018-06-15T23:22:34+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<awsglue.dynamicframe.DynamicFrame object at 0x7f0d0d2a48d0>\n"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1529104954444_-8444698","id":"20180615-232234_1792269192","dateCreated":"2018-06-15T23:22:34+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4508"}],"name":"Log_data_exploration","id":"2DJHF1EBE","angularObjects":{"2CRE5X63N:shared_process":[],"2CQZ9JC8F:shared_process":[],"2CNAPD13W:shared_process":[],"2CRC324G8:existing_process":[],"2CQ1X8PFU:shared_process":[],"2CNFC7TNE:shared_process":[],"2CMQ2EHTE:shared_process":[],"2CQUCJVJA:shared_process":[],"2CQY3SUDK:shared_process":[],"2CNA37GFQ:shared_process":[],"2CPH9H73W:shared_process":[],"2CR2XFEE3:shared_process":[],"2CQ9YVF7W:shared_process":[],"2CP1P36EU:shared_process":[],"2CMR9MKCE:shared_process":[],"2CR2YZBFW:shared_process":[],"2CPJK4U6W:shared_process":[],"2CR2Z9UR2:shared_process":[],"2CPQWHWM3:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}